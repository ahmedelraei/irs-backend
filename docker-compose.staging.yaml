services:
  
  db:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DB}
    volumes:
      - mongodb-data:/data/db
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  
  app:
    build: ./irs-api
    restart: unless-stopped
    container_name: app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB=${MONGODB_DB}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_ACCESS_SECRET_KEY=${AWS_ACCESS_SECRET_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - db
      - rabbitmq
  
  ml:
    build: ./ML
    container_name: ml-service
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
  
  # scraper:
  #   build: ./scraper
  #   container_name: scraper-service
  #   restart: unless-stopped
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #   depends_on:
  #     - rabbitmq
  
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./nginx/nginx.staging.conf:/etc/nginx/nginx.conf
      # - web-root:/var/www/certbot
      # - certbot-etc:/etc/letsencrypt
      # - certbot-var:/var/lib/letsencrypt
      # - /home/ubuntu/dhparam:/etc/ssl/certs
    depends_on:
      - app

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/certbot
  #   depends_on:
  #     - nginx

volumes:
  mongodb-data:
    driver: local
  rabbitmq-data:
    driver: local
  # certbot-etc:
  # certbot-var:
  # web-root:
  #   driver: local